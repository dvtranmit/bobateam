<?xml version="1.0" encoding="UTF-8"?>
<RootFolder label="COREGEN" treetype="folder" language="COREGEN">
	<Folder label="VERILOG Component Instantiation" treetype="folder">
		<Template label="happymole_image_rom" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
happymole_image_rom YourInstanceName (
    .clka(clka),
    .addra(addra), // Bus [18 : 0] 
    .douta(douta)); // Bus [3 : 0] 

 
		</Template>
		<Template label="happymole_red_rom" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
happymole_red_rom YourInstanceName (
    .clka(clka),
    .addra(addra), // Bus [3 : 0] 
    .douta(douta)); // Bus [3 : 0] 

 
		</Template>
		<Template label="happymole_green_rom" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
happymole_green_rom YourInstanceName (
    .clka(clka),
    .addra(addra), // Bus [3 : 0] 
    .douta(douta)); // Bus [3 : 0] 

 
		</Template>
		<Template label="happymole_blue_rom" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
happymole_blue_rom YourInstanceName (
    .clka(clka),
    .addra(addra), // Bus [3 : 0] 
    .douta(douta)); // Bus [3 : 0] 

 
		</Template>
		<Template label="tiger_image_rom" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
tiger_image_rom YourInstanceName (
    .clka(clka),
    .addra(addra), // Bus [15 : 0] 
    .douta(douta)); // Bus [3 : 0] 

 
		</Template>
		<Template label="tiger_red_rom" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
tiger_red_rom YourInstanceName (
    .clka(clka),
    .addra(addra), // Bus [3 : 0] 
    .douta(douta)); // Bus [3 : 0] 

 
		</Template>
		<Template label="tiger_green_rom" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
tiger_green_rom YourInstanceName (
    .clka(clka),
    .addra(addra), // Bus [3 : 0] 
    .douta(douta)); // Bus [3 : 0] 

 
		</Template>
		<Template label="tiger_blue_rom" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
tiger_blue_rom YourInstanceName (
    .clka(clka),
    .addra(addra), // Bus [3 : 0] 
    .douta(douta)); // Bus [3 : 0] 

 
		</Template>
		<Template label="dead_image_rom" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
dead_image_rom YourInstanceName (
    .clka(clka),
    .addra(addra), // Bus [15 : 0] 
    .douta(douta)); // Bus [3 : 0] 

 
		</Template>
		<Template label="dead_red_rom" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
dead_red_rom YourInstanceName (
    .clka(clka),
    .addra(addra), // Bus [3 : 0] 
    .douta(douta)); // Bus [3 : 0] 

 
		</Template>
		<Template label="dead_green_rom" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
dead_green_rom YourInstanceName (
    .clka(clka),
    .addra(addra), // Bus [3 : 0] 
    .douta(douta)); // Bus [3 : 0] 

 
		</Template>
		<Template label="dead_blue_rom" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
dead_blue_rom YourInstanceName (
    .clka(clka),
    .addra(addra), // Bus [3 : 0] 
    .douta(douta)); // Bus [3 : 0] 

 
		</Template>
		<Template label="happy_image_rom" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
happy_image_rom YourInstanceName (
    .clka(clka),
    .addra(addra), // Bus [15 : 0] 
    .douta(douta)); // Bus [3 : 0] 

 
		</Template>
		<Template label="happy_red_rom" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
happy_red_rom YourInstanceName (
    .clka(clka),
    .addra(addra), // Bus [3 : 0] 
    .douta(douta)); // Bus [3 : 0] 

 
		</Template>
		<Template label="happy_green_rom" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
happy_green_rom YourInstanceName (
    .clka(clka),
    .addra(addra), // Bus [3 : 0] 
    .douta(douta)); // Bus [3 : 0] 

 
		</Template>
		<Template label="happy_blue_rom" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
happy_blue_rom YourInstanceName (
    .clka(clka),
    .addra(addra), // Bus [3 : 0] 
    .douta(douta)); // Bus [3 : 0] 

 
		</Template>
		<Template label="whackrom" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
whackrom YourInstanceName (
    .clka(clka),
    .addra(addra), // Bus [16 : 0] 
    .douta(douta)); // Bus [3 : 0] 

 
		</Template>
		<Template label="whack_red_rom" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
whack_red_rom YourInstanceName (
    .clka(clka),
    .addra(addra), // Bus [3 : 0] 
    .douta(douta)); // Bus [3 : 0] 

 
		</Template>
		<Template label="whack_green_rom" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
whack_green_rom YourInstanceName (
    .clka(clka),
    .addra(addra), // Bus [3 : 0] 
    .douta(douta)); // Bus [3 : 0] 

 
		</Template>
		<Template label="whack_blue_rom" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
whack_blue_rom YourInstanceName (
    .clka(clka),
    .addra(addra), // Bus [3 : 0] 
    .douta(douta)); // Bus [3 : 0] 

 
		</Template>
		<Template label="startrom" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
startrom YourInstanceName (
    .clka(clka),
    .addra(addra), // Bus [16 : 0] 
    .douta(douta)); // Bus [3 : 0] 

 
		</Template>
		<Template label="start_red_rom" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
start_red_rom YourInstanceName (
    .clka(clka),
    .addra(addra), // Bus [3 : 0] 
    .douta(douta)); // Bus [3 : 0] 

 
		</Template>
		<Template label="start_green_rom" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
start_green_rom YourInstanceName (
    .clka(clka),
    .addra(addra), // Bus [3 : 0] 
    .douta(douta)); // Bus [3 : 0] 

 
		</Template>
		<Template label="start_blue_rom" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
start_blue_rom YourInstanceName (
    .clka(clka),
    .addra(addra), // Bus [3 : 0] 
    .douta(douta)); // Bus [3 : 0] 

 
		</Template>
		<Template label="gameoverrom" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
gameoverrom YourInstanceName (
    .clka(clka),
    .addra(addra), // Bus [17 : 0] 
    .douta(douta)); // Bus [3 : 0] 

 
		</Template>
		<Template label="gameover_red_rom" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
gameover_red_rom YourInstanceName (
    .clka(clka),
    .addra(addra), // Bus [3 : 0] 
    .douta(douta)); // Bus [3 : 0] 

 
		</Template>
		<Template label="gameover_green_rom" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
gameover_green_rom YourInstanceName (
    .clka(clka),
    .addra(addra), // Bus [3 : 0] 
    .douta(douta)); // Bus [3 : 0] 

 
		</Template>
		<Template label="gameover_blue_rom" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
gameover_blue_rom YourInstanceName (
    .clka(clka),
    .addra(addra), // Bus [3 : 0] 
    .douta(douta)); // Bus [3 : 0] 

 
		</Template>
	</Folder>
	<Folder label="VHDL Component Instantiation" treetype="folder">
		<Template label="happymole_image_rom" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component happymole_image_rom
    port (
    clka: IN std_logic;
    addra: IN std_logic_VECTOR(18 downto 0);
    douta: OUT std_logic_VECTOR(3 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : happymole_image_rom
        port map (
            clka =&gt; clka,
            addra =&gt; addra,
            douta =&gt; douta);
 
		</Template>
		<Template label="happymole_red_rom" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component happymole_red_rom
    port (
    clka: IN std_logic;
    addra: IN std_logic_VECTOR(3 downto 0);
    douta: OUT std_logic_VECTOR(3 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : happymole_red_rom
        port map (
            clka =&gt; clka,
            addra =&gt; addra,
            douta =&gt; douta);
 
		</Template>
		<Template label="happymole_green_rom" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component happymole_green_rom
    port (
    clka: IN std_logic;
    addra: IN std_logic_VECTOR(3 downto 0);
    douta: OUT std_logic_VECTOR(3 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : happymole_green_rom
        port map (
            clka =&gt; clka,
            addra =&gt; addra,
            douta =&gt; douta);
 
		</Template>
		<Template label="happymole_blue_rom" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component happymole_blue_rom
    port (
    clka: IN std_logic;
    addra: IN std_logic_VECTOR(3 downto 0);
    douta: OUT std_logic_VECTOR(3 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : happymole_blue_rom
        port map (
            clka =&gt; clka,
            addra =&gt; addra,
            douta =&gt; douta);
 
		</Template>
		<Template label="tiger_image_rom" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component tiger_image_rom
    port (
    clka: IN std_logic;
    addra: IN std_logic_VECTOR(15 downto 0);
    douta: OUT std_logic_VECTOR(3 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : tiger_image_rom
        port map (
            clka =&gt; clka,
            addra =&gt; addra,
            douta =&gt; douta);
 
		</Template>
		<Template label="tiger_red_rom" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component tiger_red_rom
    port (
    clka: IN std_logic;
    addra: IN std_logic_VECTOR(3 downto 0);
    douta: OUT std_logic_VECTOR(3 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : tiger_red_rom
        port map (
            clka =&gt; clka,
            addra =&gt; addra,
            douta =&gt; douta);
 
		</Template>
		<Template label="tiger_green_rom" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component tiger_green_rom
    port (
    clka: IN std_logic;
    addra: IN std_logic_VECTOR(3 downto 0);
    douta: OUT std_logic_VECTOR(3 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : tiger_green_rom
        port map (
            clka =&gt; clka,
            addra =&gt; addra,
            douta =&gt; douta);
 
		</Template>
		<Template label="tiger_blue_rom" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component tiger_blue_rom
    port (
    clka: IN std_logic;
    addra: IN std_logic_VECTOR(3 downto 0);
    douta: OUT std_logic_VECTOR(3 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : tiger_blue_rom
        port map (
            clka =&gt; clka,
            addra =&gt; addra,
            douta =&gt; douta);
 
		</Template>
		<Template label="dead_image_rom" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component dead_image_rom
    port (
    clka: IN std_logic;
    addra: IN std_logic_VECTOR(15 downto 0);
    douta: OUT std_logic_VECTOR(3 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : dead_image_rom
        port map (
            clka =&gt; clka,
            addra =&gt; addra,
            douta =&gt; douta);
 
		</Template>
		<Template label="dead_red_rom" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component dead_red_rom
    port (
    clka: IN std_logic;
    addra: IN std_logic_VECTOR(3 downto 0);
    douta: OUT std_logic_VECTOR(3 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : dead_red_rom
        port map (
            clka =&gt; clka,
            addra =&gt; addra,
            douta =&gt; douta);
 
		</Template>
		<Template label="dead_green_rom" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component dead_green_rom
    port (
    clka: IN std_logic;
    addra: IN std_logic_VECTOR(3 downto 0);
    douta: OUT std_logic_VECTOR(3 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : dead_green_rom
        port map (
            clka =&gt; clka,
            addra =&gt; addra,
            douta =&gt; douta);
 
		</Template>
		<Template label="dead_blue_rom" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component dead_blue_rom
    port (
    clka: IN std_logic;
    addra: IN std_logic_VECTOR(3 downto 0);
    douta: OUT std_logic_VECTOR(3 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : dead_blue_rom
        port map (
            clka =&gt; clka,
            addra =&gt; addra,
            douta =&gt; douta);
 
		</Template>
		<Template label="happy_image_rom" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component happy_image_rom
    port (
    clka: IN std_logic;
    addra: IN std_logic_VECTOR(15 downto 0);
    douta: OUT std_logic_VECTOR(3 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : happy_image_rom
        port map (
            clka =&gt; clka,
            addra =&gt; addra,
            douta =&gt; douta);
 
		</Template>
		<Template label="happy_red_rom" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component happy_red_rom
    port (
    clka: IN std_logic;
    addra: IN std_logic_VECTOR(3 downto 0);
    douta: OUT std_logic_VECTOR(3 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : happy_red_rom
        port map (
            clka =&gt; clka,
            addra =&gt; addra,
            douta =&gt; douta);
 
		</Template>
		<Template label="happy_green_rom" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component happy_green_rom
    port (
    clka: IN std_logic;
    addra: IN std_logic_VECTOR(3 downto 0);
    douta: OUT std_logic_VECTOR(3 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : happy_green_rom
        port map (
            clka =&gt; clka,
            addra =&gt; addra,
            douta =&gt; douta);
 
		</Template>
		<Template label="happy_blue_rom" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component happy_blue_rom
    port (
    clka: IN std_logic;
    addra: IN std_logic_VECTOR(3 downto 0);
    douta: OUT std_logic_VECTOR(3 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : happy_blue_rom
        port map (
            clka =&gt; clka,
            addra =&gt; addra,
            douta =&gt; douta);
 
		</Template>
		<Template label="whackrom" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component whackrom
    port (
    clka: IN std_logic;
    addra: IN std_logic_VECTOR(16 downto 0);
    douta: OUT std_logic_VECTOR(3 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : whackrom
        port map (
            clka =&gt; clka,
            addra =&gt; addra,
            douta =&gt; douta);
 
		</Template>
		<Template label="whack_red_rom" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component whack_red_rom
    port (
    clka: IN std_logic;
    addra: IN std_logic_VECTOR(3 downto 0);
    douta: OUT std_logic_VECTOR(3 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : whack_red_rom
        port map (
            clka =&gt; clka,
            addra =&gt; addra,
            douta =&gt; douta);
 
		</Template>
		<Template label="whack_green_rom" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component whack_green_rom
    port (
    clka: IN std_logic;
    addra: IN std_logic_VECTOR(3 downto 0);
    douta: OUT std_logic_VECTOR(3 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : whack_green_rom
        port map (
            clka =&gt; clka,
            addra =&gt; addra,
            douta =&gt; douta);
 
		</Template>
		<Template label="whack_blue_rom" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component whack_blue_rom
    port (
    clka: IN std_logic;
    addra: IN std_logic_VECTOR(3 downto 0);
    douta: OUT std_logic_VECTOR(3 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : whack_blue_rom
        port map (
            clka =&gt; clka,
            addra =&gt; addra,
            douta =&gt; douta);
 
		</Template>
		<Template label="startrom" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component startrom
    port (
    clka: IN std_logic;
    addra: IN std_logic_VECTOR(16 downto 0);
    douta: OUT std_logic_VECTOR(3 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : startrom
        port map (
            clka =&gt; clka,
            addra =&gt; addra,
            douta =&gt; douta);
 
		</Template>
		<Template label="start_red_rom" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component start_red_rom
    port (
    clka: IN std_logic;
    addra: IN std_logic_VECTOR(3 downto 0);
    douta: OUT std_logic_VECTOR(3 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : start_red_rom
        port map (
            clka =&gt; clka,
            addra =&gt; addra,
            douta =&gt; douta);
 
		</Template>
		<Template label="start_green_rom" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component start_green_rom
    port (
    clka: IN std_logic;
    addra: IN std_logic_VECTOR(3 downto 0);
    douta: OUT std_logic_VECTOR(3 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : start_green_rom
        port map (
            clka =&gt; clka,
            addra =&gt; addra,
            douta =&gt; douta);
 
		</Template>
		<Template label="start_blue_rom" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component start_blue_rom
    port (
    clka: IN std_logic;
    addra: IN std_logic_VECTOR(3 downto 0);
    douta: OUT std_logic_VECTOR(3 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : start_blue_rom
        port map (
            clka =&gt; clka,
            addra =&gt; addra,
            douta =&gt; douta);
 
		</Template>
		<Template label="gameoverrom" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component gameoverrom
    port (
    clka: IN std_logic;
    addra: IN std_logic_VECTOR(17 downto 0);
    douta: OUT std_logic_VECTOR(3 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : gameoverrom
        port map (
            clka =&gt; clka,
            addra =&gt; addra,
            douta =&gt; douta);
 
		</Template>
		<Template label="gameover_red_rom" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component gameover_red_rom
    port (
    clka: IN std_logic;
    addra: IN std_logic_VECTOR(3 downto 0);
    douta: OUT std_logic_VECTOR(3 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : gameover_red_rom
        port map (
            clka =&gt; clka,
            addra =&gt; addra,
            douta =&gt; douta);
 
		</Template>
		<Template label="gameover_green_rom" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component gameover_green_rom
    port (
    clka: IN std_logic;
    addra: IN std_logic_VECTOR(3 downto 0);
    douta: OUT std_logic_VECTOR(3 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : gameover_green_rom
        port map (
            clka =&gt; clka,
            addra =&gt; addra,
            douta =&gt; douta);
 
		</Template>
		<Template label="gameover_blue_rom" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component gameover_blue_rom
    port (
    clka: IN std_logic;
    addra: IN std_logic_VECTOR(3 downto 0);
    douta: OUT std_logic_VECTOR(3 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : gameover_blue_rom
        port map (
            clka =&gt; clka,
            addra =&gt; addra,
            douta =&gt; douta);
 
		</Template>
	</Folder>
</RootFolder>
